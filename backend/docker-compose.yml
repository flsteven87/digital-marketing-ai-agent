version: '3.8'

services:
  app:
    build: .
    container_name: digital-marketing-api
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: digital-marketing-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-digital_marketing_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: digital-marketing-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  celery-worker:
    build: .
    container_name: digital-marketing-celery-worker
    command: celery -A app.core.celery_app worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    networks:
      - app-network

  celery-beat:
    build: .
    container_name: digital-marketing-celery-beat
    command: celery -A app.core.celery_app beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./app:/app/app
    networks:
      - app-network

  flower:
    build: .
    container_name: digital-marketing-flower
    command: celery -A app.core.celery_app flower
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery-worker
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge